<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Media Monitoring" time="40.569" tests="1" failures="1" errors="0">
   <testsuite name="Media Monitoring" tests="1" failures="1" errors="0" time="40.569" skipped="0" timestamp="2022-01-26 15:26:49" hostname="alalzabarga - localhost" id="Test Suites/Media Monitoring">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="/Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642"/>
         <property name="logFiles" value="/Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="alalzabarga - localhost"/>
         <property name="hostAddress" value="127.0.0.1"/>
         <property name="os" value="Mac OS X 64bit"/>
         <property name="katalonVersion" value="8.2.5.208"/>
      </properties>
      <testcase name="Test Cases/CheckEpisodes" time="40.351" classname="Test Cases/CheckEpisodes" status="FAILED">
         <failure type="FAILED" message="Test Cases/CheckEpisodes FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: *********** e:: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'
	at com.kms.katalon.core.util.KeywordUtil.markFailed(KeywordUtil.java:19)
	at com.kms.katalon.core.util.KeywordUtil$markFailed$0.call(Unknown Source)
	at CheckEpisodes.run(CheckEpisodes:113)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1643203602153.run(TempTestSuite1643203602153.groovy:36)
"/>
         <system-out><![CDATA[2022-01-26 15:26:49 - [TEST_CASE][FAILED] - Test Cases/CheckEpisodes: Test Cases/CheckEpisodes FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: *********** e:: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'
	at com.kms.katalon.core.util.KeywordUtil.markFailed(KeywordUtil.java:19)
	at com.kms.katalon.core.util.KeywordUtil$markFailed$0.call(Unknown Source)
	at CheckEpisodes.run(CheckEpisodes:113)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1643203602153.run(TempTestSuite1643203602153.groovy:36)


2022-01-26 15:26:49 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: Call Test Case 'Test Cases/getToken' successfully

2022-01-26 15:26:49 - [TEST_STEP][PASSED] - callTestCase(findTestCase("getToken"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/getToken' successfully

2022-01-26 15:26:49 - [TEST_CASE][PASSED] - Test Cases/getToken: Test Cases/getToken

2022-01-26 15:26:50 - [TEST_STEP][PASSED] - Ssession = SendMediaReq().getSssesion(): Test object id is null

2022-01-26 15:26:51 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/0.har

2022-01-26 15:26:51 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:26:52 - [MESSAGE][WARNING] - Test object id is null

2022-01-26 15:26:52 - [MESSAGE][WARNING] - Test object id is null

2022-01-26 15:26:53 - [TEST_STEP][PASSED] - println("Ssession:: " + Ssession): null

2022-01-26 15:26:53 - [TEST_STEP][PASSED] - count = 4: null

2022-01-26 15:26:53 - [TEST_STEP][PASSED] - for ([i = 0, i < count, (i++)]): null

2022-01-26 15:26:53 - [TEST_STEP][PASSED] - authenticate = sendRequest(findTestObject("Object Repository/newPostmanAPIs/validateLogin", ["ssession":Ssession])): Send request successfully

2022-01-26 15:26:54 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/1.har

2022-01-26 15:26:54 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - println("authenticate:: " + authenticate): null

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(authenticate, 200): Verify response status code successfully

2022-01-26 15:26:54 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - user = new org.json.JSONObject(authenticate.responseBodyContent): null

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - token = get("user").get("sessionId"): null

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - userId = get("user").get("id"): null

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - userEmail = get("user").get("email"): null

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - Token = token: null

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - println("tokenValue::" + Token): null

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - userId = userId: null

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - userEmail = userEmail: null

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - markPassed("Response status codes match"): Response status codes match

2022-01-26 15:26:54 - [MESSAGE][PASSED] - Response status codes match

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - break: null

2022-01-26 15:26:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/getToken' successfully

2022-01-26 15:26:54 - [TEST_STEP][PASSED] - ids = CropResponse().getIdsList(Episodes): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - statusCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - responseBody = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - DRM = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - DRMStatusCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - DRMresponseBody = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - urlFlag = true: null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - DRMFlag = true: null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - url = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-01-26 15:26:57 - [TEST_STEP][FAILED] - for ([i = 0, i < ids.size(), (i++)]): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:26:57 - [TEST_STEP][FAILED] - try: Unable to verify response status code (Root cause: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:50)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyStatusCode(VerifyResponseStatusCodeKeyword.groovy:52)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.access$1(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.doCall(VerifyResponseStatusCodeKeyword.groovy:42)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.call(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:74)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyResponseStatusCode(VerifyResponseStatusCodeKeyword.groovy:37)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.execute(VerifyResponseStatusCodeKeyword.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.verifyResponseStatusCode(WSBuiltInKeywords.groovy:344)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords$verifyResponseStatusCode$0.call(Unknown Source)
	at CheckEpisodes.run(CheckEpisodes:47)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1643203602153.run(TempTestSuite1643203602153.groovy:36)
)

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:26:57 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/2.har

2022-01-26 15:26:57 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:26:57 - [TEST_STEP][FAILED] - if (verifyResponseStatusCode(PlayOut, 200)): Unable to verify response status code (Root cause: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:50)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyStatusCode(VerifyResponseStatusCodeKeyword.groovy:52)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.access$1(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.doCall(VerifyResponseStatusCodeKeyword.groovy:42)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.call(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:74)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyResponseStatusCode(VerifyResponseStatusCodeKeyword.groovy:37)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.execute(VerifyResponseStatusCodeKeyword.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.verifyResponseStatusCode(WSBuiltInKeywords.groovy:344)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords$verifyResponseStatusCode$0.call(Unknown Source)
	at CheckEpisodes.run(CheckEpisodes:47)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1643203602153.run(TempTestSuite1643203602153.groovy:36)
)

2022-01-26 15:26:57 - [MESSAGE][FAILED] - Expected status code is '200' but actual status code is '404'

2022-01-26 15:26:57 - [MESSAGE][FAILED] - Unable to verify response status code (Root cause: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:50)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyStatusCode(VerifyResponseStatusCodeKeyword.groovy:52)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.access$1(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.doCall(VerifyResponseStatusCodeKeyword.groovy:42)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.call(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:74)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyResponseStatusCode(VerifyResponseStatusCodeKeyword.groovy:37)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.execute(VerifyResponseStatusCodeKeyword.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.verifyResponseStatusCode(WSBuiltInKeywords.groovy:344)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords$verifyResponseStatusCode$0.call(Unknown Source)
	at CheckEpisodes.run(CheckEpisodes:47)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1643203602153.run(TempTestSuite1643203602153.groovy:36)
)

2022-01-26 15:26:57 - [TEST_STEP][FAILED] - catch (Exception e): *********** e:: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - failedResult.setPlayoutStatus("Playout API Failed"): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - failedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - getEpisodesFailedInstance().addEpisodesFailedResult(failedResult): null

2022-01-26 15:26:57 - [TEST_STEP][FAILED] - markFailed("*********** e:: " + e): *********** e:: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'

2022-01-26 15:26:57 - [MESSAGE][FAILED] - *********** e:: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:26:57 - [TEST_STEP][FAILED] - try: Unable to verify response status code (Root cause: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:50)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyStatusCode(VerifyResponseStatusCodeKeyword.groovy:52)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.access$1(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.doCall(VerifyResponseStatusCodeKeyword.groovy:42)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.call(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:74)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyResponseStatusCode(VerifyResponseStatusCodeKeyword.groovy:37)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.execute(VerifyResponseStatusCodeKeyword.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.verifyResponseStatusCode(WSBuiltInKeywords.groovy:344)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords$verifyResponseStatusCode$0.call(Unknown Source)
	at CheckEpisodes.run(CheckEpisodes:47)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1643203602153.run(TempTestSuite1643203602153.groovy:36)
)

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:26:57 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:26:58 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/3.har

2022-01-26 15:26:58 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:26:58 - [TEST_STEP][FAILED] - if (verifyResponseStatusCode(PlayOut, 200)): Unable to verify response status code (Root cause: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:50)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyStatusCode(VerifyResponseStatusCodeKeyword.groovy:52)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.access$1(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.doCall(VerifyResponseStatusCodeKeyword.groovy:42)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.call(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:74)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyResponseStatusCode(VerifyResponseStatusCodeKeyword.groovy:37)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.execute(VerifyResponseStatusCodeKeyword.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.verifyResponseStatusCode(WSBuiltInKeywords.groovy:344)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords$verifyResponseStatusCode$0.call(Unknown Source)
	at CheckEpisodes.run(CheckEpisodes:47)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1643203602153.run(TempTestSuite1643203602153.groovy:36)
)

2022-01-26 15:26:58 - [MESSAGE][FAILED] - Expected status code is '200' but actual status code is '404'

2022-01-26 15:26:58 - [MESSAGE][FAILED] - Unable to verify response status code (Root cause: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:50)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyStatusCode(VerifyResponseStatusCodeKeyword.groovy:52)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.access$1(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.doCall(VerifyResponseStatusCodeKeyword.groovy:42)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword$_verifyResponseStatusCode_closure1.call(VerifyResponseStatusCodeKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:74)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyResponseStatusCode(VerifyResponseStatusCodeKeyword.groovy:37)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.execute(VerifyResponseStatusCodeKeyword.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.verifyResponseStatusCode(WSBuiltInKeywords.groovy:344)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords$verifyResponseStatusCode$0.call(Unknown Source)
	at CheckEpisodes.run(CheckEpisodes:47)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1643203602153.run(TempTestSuite1643203602153.groovy:36)
)

2022-01-26 15:26:58 - [TEST_STEP][FAILED] - catch (Exception e): *********** e:: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - failedResult.setPlayoutStatus("Playout API Failed"): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - failedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - getEpisodesFailedInstance().addEpisodesFailedResult(failedResult): null

2022-01-26 15:26:58 - [TEST_STEP][FAILED] - markFailed("*********** e:: " + e): *********** e:: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'

2022-01-26 15:26:58 - [MESSAGE][FAILED] - *********** e:: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:26:58 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/4.har

2022-01-26 15:26:58 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:26:58 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:26:58 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:26:59 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/5.har

2022-01-26 15:26:59 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:26:59 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:26:59 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/6.har

2022-01-26 15:26:59 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:26:59 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:26:59 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:00 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/7.har

2022-01-26 15:27:00 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:00 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:00 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/8.har

2022-01-26 15:27:00 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:00 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:00 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:01 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/9.har

2022-01-26 15:27:01 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:01 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:01 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/10.har

2022-01-26 15:27:01 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:01 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:01 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:02 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/11.har

2022-01-26 15:27:02 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:02 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:02 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/12.har

2022-01-26 15:27:02 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:02 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:02 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/13.har

2022-01-26 15:27:02 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:02 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:02 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:03 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/14.har

2022-01-26 15:27:03 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:03 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:03 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/15.har

2022-01-26 15:27:03 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:03 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:03 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:04 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/16.har

2022-01-26 15:27:04 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:04 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:04 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/17.har

2022-01-26 15:27:04 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:04 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:04 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:05 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/18.har

2022-01-26 15:27:05 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:05 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:05 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/19.har

2022-01-26 15:27:05 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:05 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:05 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:06 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/20.har

2022-01-26 15:27:06 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:06 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:06 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/21.har

2022-01-26 15:27:06 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:06 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:06 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:07 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/22.har

2022-01-26 15:27:07 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:07 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:07 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/23.har

2022-01-26 15:27:07 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:07 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:07 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:08 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/24.har

2022-01-26 15:27:08 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:08 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:08 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/25.har

2022-01-26 15:27:08 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:08 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:08 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/26.har

2022-01-26 15:27:08 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:08 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:08 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:09 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/27.har

2022-01-26 15:27:09 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:09 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:09 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/28.har

2022-01-26 15:27:09 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:09 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:09 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:10 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/29.har

2022-01-26 15:27:10 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:10 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:10 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/30.har

2022-01-26 15:27:10 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:10 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:10 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:11 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/31.har

2022-01-26 15:27:11 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:11 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:11 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/32.har

2022-01-26 15:27:11 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:11 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:11 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:12 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/33.har

2022-01-26 15:27:12 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:12 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:12 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/34.har

2022-01-26 15:27:12 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:12 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:12 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:13 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/35.har

2022-01-26 15:27:13 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:13 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:13 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/36.har

2022-01-26 15:27:13 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:13 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:13 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/37.har

2022-01-26 15:27:13 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:13 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:13 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:14 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/38.har

2022-01-26 15:27:14 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:14 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:14 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/39.har

2022-01-26 15:27:14 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:14 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:14 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:15 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/40.har

2022-01-26 15:27:15 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:15 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:15 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/41.har

2022-01-26 15:27:15 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:15 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:15 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:16 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/42.har

2022-01-26 15:27:16 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:16 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:16 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/43.har

2022-01-26 15:27:16 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:16 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:16 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/44.har

2022-01-26 15:27:16 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:16 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:16 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:17 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/45.har

2022-01-26 15:27:17 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:17 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:17 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/46.har

2022-01-26 15:27:17 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:17 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:17 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:18 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/47.har

2022-01-26 15:27:18 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:18 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:18 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:19 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:19 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:19 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/48.har

2022-01-26 15:27:19 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:27 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:27 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/49.har

2022-01-26 15:27:27 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:27 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:27 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/50.har

2022-01-26 15:27:27 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:27 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:27 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:28 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/51.har

2022-01-26 15:27:28 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:28 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:28 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/52.har

2022-01-26 15:27:28 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:28 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:28 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:29 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/53.har

2022-01-26 15:27:29 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:29 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - passedResult = new shahid.api.PassedResult(): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - failedResult = new shahid.api.FailedResult(): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - itemPlayoutID = ids[i]: null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - passedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - failedResult.setAssetID(itemPlayoutID): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - println("******** GlobalVariable.itemPlayoutID :: " + itemPlayoutID): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession, "token":Token])): Send request successfully

2022-01-26 15:27:29 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/54.har

2022-01-26 15:27:29 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - statusCode = PlayOut.getStatusCode(): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-26 15:27:29 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - DRM = get("playout").get("drm"): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - url = get("playout").get("url"): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - println("******* DRM:: " + DRM): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - println("******* url:: " + url): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - if (url.contains(" ")): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-26 15:27:29 - [TEST_STEP][PASSED] - DRMUrl = sendRequest(findTestObject("Object Repository/Decode/Playout API/drm", ["ssession":ssession])): Send request successfully

2022-01-26 15:27:30 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220126_152642/Media Monitoring/20220126_152642/requests/main/55.har

2022-01-26 15:27:30 - [MESSAGE][PASSED] - Send request successfully

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - DRMresponseBody = DRMUrl.getResponseBodyContent(): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - DRMStatusCode = DRMUrl.getStatusCode(): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - try: null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(DRMUrl, 200)): null

2022-01-26 15:27:30 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - passedResult.setDRMStatus("DRM API Passed"): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - passedResult.setDRMResponse(DRMresponseBody): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - passedResult.setPlayoutStatus("Playout API Passed"): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - passedResult.setPlayoutResponse(responseBody): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - if (urlFlag && DRMFlag): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - passedResult.setStatus("Passed"): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - getEpisodesPassedInstance().addEpisodesPassedResult(passedResult): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - Start listener action : sampleAfterTestCase: null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - println("testCaseContext.getTestCaseId():: " + testCaseContext.getTestCaseId()): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - if (!(getTestCaseId().contains("sendEmailtest") || getTestCaseId().contains("Result") || getTestCaseId().contains("getDrmToken") || getTestCaseId().contains("getiTuensBaseToken") || getTestCaseId().contains("getSsession"))): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - if (testCaseContext.getTestCaseStatus() == "FAILED"): null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - failedTestCases += 1: null

2022-01-26 15:27:30 - [TEST_STEP][PASSED] - println("testCaseContext:: FAILED:: GlobalVariable.failedTestCases::" + failedTestCases): null]]></system-out>
         <system-err><![CDATA[2022-01-26 15:26:49 - [TEST_CASE][FAILED] - Test Cases/CheckEpisodes: Test Cases/CheckEpisodes FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: *********** e:: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'
	at com.kms.katalon.core.util.KeywordUtil.markFailed(KeywordUtil.java:19)
	at com.kms.katalon.core.util.KeywordUtil$markFailed$0.call(Unknown Source)
	at CheckEpisodes.run(CheckEpisodes:113)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1643203602153.run(TempTestSuite1643203602153.groovy:36)]]></system-err>
      </testcase>
      <system-out><![CDATA[2022-01-26 15:26:49 - [TEST_SUITE][FAILED] - Media Monitoring: Test Cases/CheckEpisodes FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: *********** e:: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'
	at com.kms.katalon.core.util.KeywordUtil.markFailed(KeywordUtil.java:19)
	at com.kms.katalon.core.util.KeywordUtil$markFailed$0.call(Unknown Source)
	at CheckEpisodes.run(CheckEpisodes:113)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1643203602153.run(TempTestSuite1643203602153.groovy:36)]]></system-out>
      <system-err><![CDATA[2022-01-26 15:26:49 - [TEST_SUITE][FAILED] - Media Monitoring: Test Cases/CheckEpisodes FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: *********** e:: com.kms.katalon.core.exception.StepFailedException: Expected status code is '200' but actual status code is '404'
	at com.kms.katalon.core.util.KeywordUtil.markFailed(KeywordUtil.java:19)
	at com.kms.katalon.core.util.KeywordUtil$markFailed$0.call(Unknown Source)
	at CheckEpisodes.run(CheckEpisodes:113)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1643203602153.run(TempTestSuite1643203602153.groovy:36)]]></system-err>
   </testsuite>
</testsuites>
