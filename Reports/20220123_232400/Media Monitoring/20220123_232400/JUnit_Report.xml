<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Media Monitoring" time="20.439" tests="2" failures="0" errors="1">
   <testsuite name="Media Monitoring" tests="2" failures="0" errors="1" time="20.439" skipped="0" timestamp="2022-01-23 23:24:07" hostname="alalzabarga - localhost" id="Test Suites/Media Monitoring">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="/Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400"/>
         <property name="logFiles" value="/Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="alalzabarga - localhost"/>
         <property name="hostAddress" value="127.0.0.1"/>
         <property name="os" value="Mac OS X 64bit"/>
         <property name="katalonVersion" value="8.2.5.208"/>
      </properties>
      <testcase name="Test Cases/CheckClips" time="17.963" classname="Test Cases/CheckClips" status="PASSED">
         <system-out><![CDATA[2022-01-23 23:24:07 - [TEST_CASE][PASSED] - Test Cases/CheckClips: Test Cases/CheckClips

2022-01-23 23:24:07 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: Call Test Case 'Test Cases/getToken' successfully

2022-01-23 23:24:07 - [TEST_STEP][PASSED] - callTestCase(findTestCase("getToken"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/getToken' successfully

2022-01-23 23:24:07 - [TEST_CASE][PASSED] - Test Cases/getToken: Test Cases/getToken

2022-01-23 23:24:08 - [TEST_STEP][PASSED] - Ssession = SendMediaReq().getSssesion(): Test object id is null

2022-01-23 23:24:09 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/0.har

2022-01-23 23:24:09 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:09 - [MESSAGE][WARNING] - Test object id is null

2022-01-23 23:24:10 - [MESSAGE][WARNING] - Test object id is null

2022-01-23 23:24:10 - [TEST_STEP][PASSED] - println("Ssession:: " + Ssession): null

2022-01-23 23:24:10 - [TEST_STEP][PASSED] - count = 4: null

2022-01-23 23:24:10 - [TEST_STEP][PASSED] - for ([i = 0, i < count, (i++)]): null

2022-01-23 23:24:10 - [TEST_STEP][PASSED] - authenticate = sendRequest(findTestObject("Object Repository/newPostmanAPIs/validateLogin", ["ssession":Ssession])): Send request successfully

2022-01-23 23:24:11 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/1.har

2022-01-23 23:24:11 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - println("authenticate:: " + authenticate): null

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(authenticate, 200): Verify response status code successfully

2022-01-23 23:24:11 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - user = new org.json.JSONObject(authenticate.responseBodyContent): null

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - token = get("user").get("sessionId"): null

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - userId = get("user").get("id"): null

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - userEmail = get("user").get("email"): null

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - Token = token: null

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - println("tokenValue::" + Token): null

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - userId = userId: null

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - userEmail = userEmail: null

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - markPassed("Response status codes match"): Response status codes match

2022-01-23 23:24:11 - [MESSAGE][PASSED] - Response status codes match

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - break: null

2022-01-23 23:24:11 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/getToken' successfully

2022-01-23 23:24:11 - [TEST_STEP][PASSED] - ids = CropResponse().getIdsList("CLIP"): null

2022-01-23 23:24:13 - [TEST_STEP][PASSED] - responseCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-01-23 23:24:13 - [TEST_STEP][PASSED] - ActualURL = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-01-23 23:24:13 - [TEST_STEP][PASSED] - responseBody = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-01-23 23:24:13 - [TEST_STEP][PASSED] - url = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-01-23 23:24:13 - [TEST_STEP][PASSED] - DRM = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-01-23 23:24:13 - [TEST_STEP][PASSED] - for ([i = 0, i < ids.size(), (i++)]): null

2022-01-23 23:24:13 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:13 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:13 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:13 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:14 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/2.har

2022-01-23 23:24:14 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:14 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:14 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/3.har

2022-01-23 23:24:14 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:14 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:14 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/4.har

2022-01-23 23:24:14 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:14 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:14 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:15 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/5.har

2022-01-23 23:24:15 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:15 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:15 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/6.har

2022-01-23 23:24:15 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:15 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:15 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:16 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/7.har

2022-01-23 23:24:16 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:16 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:16 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/8.har

2022-01-23 23:24:16 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:16 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:16 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:17 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/9.har

2022-01-23 23:24:17 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:17 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:17 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/10.har

2022-01-23 23:24:17 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:17 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:17 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/11.har

2022-01-23 23:24:17 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:17 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:17 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:18 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/12.har

2022-01-23 23:24:18 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:18 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:18 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/13.har

2022-01-23 23:24:18 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:18 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:18 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:19 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/14.har

2022-01-23 23:24:19 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:19 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:19 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/15.har

2022-01-23 23:24:19 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:19 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:19 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:19 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/16.har

2022-01-23 23:24:20 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:20 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:20 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/17.har

2022-01-23 23:24:20 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:20 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:20 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/18.har

2022-01-23 23:24:20 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:20 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:20 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:21 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/19.har

2022-01-23 23:24:21 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:21 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:21 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/20.har

2022-01-23 23:24:21 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:21 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:21 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/21.har

2022-01-23 23:24:21 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:21 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:21 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:22 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/22.har

2022-01-23 23:24:22 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:22 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:22 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/23.har

2022-01-23 23:24:22 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:22 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:22 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:23 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/24.har

2022-01-23 23:24:23 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:23 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:23 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/25.har

2022-01-23 23:24:23 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:23 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:23 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:24 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/26.har

2022-01-23 23:24:24 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:24 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:24 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/27.har

2022-01-23 23:24:24 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:24 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:24 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/28.har

2022-01-23 23:24:24 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:24 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:24 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:25 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/29.har

2022-01-23 23:24:25 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:25 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - passedResult = new shahid.api.ClipsPassedResult(): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - failedResult = new shahid.api.ClipsFailedResult(): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - PlayOut = sendRequest(findTestObject("Object Repository/Decode/Playout API/Playout", ["ssession":ssession])): Send request successfully

2022-01-23 23:24:25 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/30.har

2022-01-23 23:24:25 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - responseBody = PlayOut.getResponseBodyContent(): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - if (verifyResponseStatusCode(PlayOut, 200)): null

2022-01-23 23:24:25 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - jObject = new org.json.JSONObject(responseBody): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - println("jObject::  " + jObject + "
 url: " + responseBody): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - url = jObject.get("playout"): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - ActualURL = url.getString("url"): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - DRM = url.get("drm"): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - if (DRM): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - passedResult.setStatuscode(responseCode): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - catch (Exception e): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - failedResult.setStatuscode(responseCode): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - failedResult.setResponse(responseBody): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - failedResult.setStatus("Failed"): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - getClipsFailedInstance().addClipsFailedResult(failedResult): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - Start listener action : sampleAfterTestCase: null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - println("testCaseContext.getTestCaseId():: " + testCaseContext.getTestCaseId()): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - if (!(getTestCaseId().contains("sendEmailtest") || getTestCaseId().contains("Result") || getTestCaseId().contains("getDrmToken") || getTestCaseId().contains("getiTuensBaseToken") || getTestCaseId().contains("getSsession"))): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - if (testCaseContext.getTestCaseStatus() == "FAILED"): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - else if (testCaseContext.getTestCaseStatus() == "PASSED"): null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - passedTestCases += 1: null

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - println("testCaseContext:: PASSED:: GlobalVariable.passedTestCases::" + passedTestCases): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/sendEmailtest" time="2.314" classname="Test Cases/sendEmailtest" status="ERROR">
         <error type="ERROR" message="Test Cases/sendEmailtest FAILED.
Reason:
com.sun.mail.smtp.SMTPSendFailedException: 530-5.7.0 Authentication Required. Learn more at
530 5.7.0  https://support.google.com/mail/?p=WantAuthError j13sm6049953wrw.116 - gsmtp

	at com.sun.mail.smtp.SMTPTransport.issueSendCommand(SMTPTransport.java:1388)
	at com.sun.mail.smtp.SMTPTransport.mailFrom(SMTPTransport.java:959)
	at com.sun.mail.smtp.SMTPTransport.sendMessage(SMTPTransport.java:583)
	at shahid.api.sendEmail.sendMailByGroovy(sendEmail.groovy:116)
	at shahid.api.sendEmail$sendMailByGroovy.call(Unknown Source)
	at sendEmailtest.run(sendEmailtest:32)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1642973040738.run(TempTestSuite1642973040738.groovy:36)
"/>
         <system-out><![CDATA[2022-01-23 23:24:25 - [TEST_CASE][ERROR] - Test Cases/sendEmailtest: Test Cases/sendEmailtest FAILED.
Reason:
com.sun.mail.smtp.SMTPSendFailedException: 530-5.7.0 Authentication Required. Learn more at
530 5.7.0  https://support.google.com/mail/?p=WantAuthError j13sm6049953wrw.116 - gsmtp

	at com.sun.mail.smtp.SMTPTransport.issueSendCommand(SMTPTransport.java:1388)
	at com.sun.mail.smtp.SMTPTransport.mailFrom(SMTPTransport.java:959)
	at com.sun.mail.smtp.SMTPTransport.sendMessage(SMTPTransport.java:583)
	at shahid.api.sendEmail.sendMailByGroovy(sendEmail.groovy:116)
	at shahid.api.sendEmail$sendMailByGroovy.call(Unknown Source)
	at sendEmailtest.run(sendEmailtest:32)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1642973040738.run(TempTestSuite1642973040738.groovy:36)


2022-01-23 23:24:25 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: Call Test Case 'Test Cases/getToken' successfully

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - callTestCase(findTestCase("getToken"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/getToken' successfully

2022-01-23 23:24:25 - [TEST_CASE][PASSED] - Test Cases/getToken: Test Cases/getToken

2022-01-23 23:24:25 - [TEST_STEP][PASSED] - Ssession = SendMediaReq().getSssesion(): Send request successfully

2022-01-23 23:24:26 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/31.har

2022-01-23 23:24:26 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:26 - [TEST_STEP][PASSED] - println("Ssession:: " + Ssession): null

2022-01-23 23:24:26 - [TEST_STEP][PASSED] - count = 4: null

2022-01-23 23:24:26 - [TEST_STEP][PASSED] - for ([i = 0, i < count, (i++)]): null

2022-01-23 23:24:26 - [TEST_STEP][PASSED] - authenticate = sendRequest(findTestObject("Object Repository/newPostmanAPIs/validateLogin", ["ssession":Ssession])): Send request successfully

2022-01-23 23:24:27 - [MESSAGE][INFO] - HAR: /Users/alalzabarga/git/mediaProject/Reports/20220123_232400/Media Monitoring/20220123_232400/requests/main/32.har

2022-01-23 23:24:27 - [MESSAGE][PASSED] - Send request successfully

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - println("authenticate:: " + authenticate): null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - try: null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(authenticate, 200): Verify response status code successfully

2022-01-23 23:24:27 - [MESSAGE][PASSED] - Verify response status code successfully

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - user = new org.json.JSONObject(authenticate.responseBodyContent): null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - token = get("user").get("sessionId"): null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - userId = get("user").get("id"): null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - userEmail = get("user").get("email"): null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - Token = token: null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - println("tokenValue::" + Token): null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - userId = userId: null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - userEmail = userEmail: null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - markPassed("Response status codes match"): Response status codes match

2022-01-23 23:24:27 - [MESSAGE][PASSED] - Response status codes match

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - break: null

2022-01-23 23:24:27 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/getToken' successfully

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - clipsFailedResult = getClipsFailedInstance().getClipsFailedResults(): null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - clipsPassedResult = getClipsPassedInstance().getClipsPassedResults(): null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - println("clipsFailedResult Size = " + clipsFailedResult.size()): null

2022-01-23 23:24:27 - [TEST_STEP][PASSED] - emailBody = "": null

2022-01-23 23:24:27 - [TEST_STEP][ERROR] - if (clipsFailedResult.size() > 0): Test Cases/sendEmailtest FAILED.
Reason:
com.sun.mail.smtp.SMTPSendFailedException: 530-5.7.0 Authentication Required. Learn more at
530 5.7.0  https://support.google.com/mail/?p=WantAuthError j13sm6049953wrw.116 - gsmtp

	at com.sun.mail.smtp.SMTPTransport.issueSendCommand(SMTPTransport.java:1388)
	at com.sun.mail.smtp.SMTPTransport.mailFrom(SMTPTransport.java:959)
	at com.sun.mail.smtp.SMTPTransport.sendMessage(SMTPTransport.java:583)
	at shahid.api.sendEmail.sendMailByGroovy(sendEmail.groovy:116)
	at shahid.api.sendEmail$sendMailByGroovy.call(Unknown Source)
	at sendEmailtest.run(sendEmailtest:32)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1642973040738.run(TempTestSuite1642973040738.groovy:36)


2022-01-23 23:24:27 - [TEST_STEP][ERROR] - sendEmail().sendMailByGroovy(): Test Cases/sendEmailtest FAILED.
Reason:
com.sun.mail.smtp.SMTPSendFailedException: 530-5.7.0 Authentication Required. Learn more at
530 5.7.0  https://support.google.com/mail/?p=WantAuthError j13sm6049953wrw.116 - gsmtp

	at com.sun.mail.smtp.SMTPTransport.issueSendCommand(SMTPTransport.java:1388)
	at com.sun.mail.smtp.SMTPTransport.mailFrom(SMTPTransport.java:959)
	at com.sun.mail.smtp.SMTPTransport.sendMessage(SMTPTransport.java:583)
	at shahid.api.sendEmail.sendMailByGroovy(sendEmail.groovy:116)
	at shahid.api.sendEmail$sendMailByGroovy.call(Unknown Source)
	at sendEmailtest.run(sendEmailtest:32)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1642973040738.run(TempTestSuite1642973040738.groovy:36)


2022-01-23 23:24:28 - [MESSAGE][ERROR] - Test Cases/sendEmailtest FAILED.
Reason:
com.sun.mail.smtp.SMTPSendFailedException: 530-5.7.0 Authentication Required. Learn more at
530 5.7.0  https://support.google.com/mail/?p=WantAuthError j13sm6049953wrw.116 - gsmtp

	at com.sun.mail.smtp.SMTPTransport.issueSendCommand(SMTPTransport.java:1388)
	at com.sun.mail.smtp.SMTPTransport.mailFrom(SMTPTransport.java:959)
	at com.sun.mail.smtp.SMTPTransport.sendMessage(SMTPTransport.java:583)
	at shahid.api.sendEmail.sendMailByGroovy(sendEmail.groovy:116)
	at shahid.api.sendEmail$sendMailByGroovy.call(Unknown Source)
	at sendEmailtest.run(sendEmailtest:32)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1642973040738.run(TempTestSuite1642973040738.groovy:36)


2022-01-23 23:24:28 - [TEST_STEP][PASSED] - Start listener action : sampleAfterTestCase: null

2022-01-23 23:24:28 - [TEST_STEP][PASSED] - println("testCaseContext.getTestCaseId():: " + testCaseContext.getTestCaseId()): null

2022-01-23 23:24:28 - [TEST_STEP][PASSED] - if (!(getTestCaseId().contains("sendEmailtest") || getTestCaseId().contains("Result") || getTestCaseId().contains("getDrmToken") || getTestCaseId().contains("getiTuensBaseToken") || getTestCaseId().contains("getSsession"))): null]]></system-out>
         <system-err><![CDATA[2022-01-23 23:24:25 - [TEST_CASE][ERROR] - Test Cases/sendEmailtest: Test Cases/sendEmailtest FAILED.
Reason:
com.sun.mail.smtp.SMTPSendFailedException: 530-5.7.0 Authentication Required. Learn more at
530 5.7.0  https://support.google.com/mail/?p=WantAuthError j13sm6049953wrw.116 - gsmtp

	at com.sun.mail.smtp.SMTPTransport.issueSendCommand(SMTPTransport.java:1388)
	at com.sun.mail.smtp.SMTPTransport.mailFrom(SMTPTransport.java:959)
	at com.sun.mail.smtp.SMTPTransport.sendMessage(SMTPTransport.java:583)
	at shahid.api.sendEmail.sendMailByGroovy(sendEmail.groovy:116)
	at shahid.api.sendEmail$sendMailByGroovy.call(Unknown Source)
	at sendEmailtest.run(sendEmailtest:32)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1642973040738.run(TempTestSuite1642973040738.groovy:36)]]></system-err>
      </testcase>
      <system-out><![CDATA[2022-01-23 23:24:07 - [TEST_SUITE][ERROR] - Media Monitoring: Test Cases/sendEmailtest FAILED.
Reason:
com.sun.mail.smtp.SMTPSendFailedException: 530-5.7.0 Authentication Required. Learn more at
530 5.7.0  https://support.google.com/mail/?p=WantAuthError j13sm6049953wrw.116 - gsmtp

	at com.sun.mail.smtp.SMTPTransport.issueSendCommand(SMTPTransport.java:1388)
	at com.sun.mail.smtp.SMTPTransport.mailFrom(SMTPTransport.java:959)
	at com.sun.mail.smtp.SMTPTransport.sendMessage(SMTPTransport.java:583)
	at shahid.api.sendEmail.sendMailByGroovy(sendEmail.groovy:116)
	at shahid.api.sendEmail$sendMailByGroovy.call(Unknown Source)
	at sendEmailtest.run(sendEmailtest:32)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1642973040738.run(TempTestSuite1642973040738.groovy:36)]]></system-out>
      <system-err><![CDATA[2022-01-23 23:24:07 - [TEST_SUITE][ERROR] - Media Monitoring: Test Cases/sendEmailtest FAILED.
Reason:
com.sun.mail.smtp.SMTPSendFailedException: 530-5.7.0 Authentication Required. Learn more at
530 5.7.0  https://support.google.com/mail/?p=WantAuthError j13sm6049953wrw.116 - gsmtp

	at com.sun.mail.smtp.SMTPTransport.issueSendCommand(SMTPTransport.java:1388)
	at com.sun.mail.smtp.SMTPTransport.mailFrom(SMTPTransport.java:959)
	at com.sun.mail.smtp.SMTPTransport.sendMessage(SMTPTransport.java:583)
	at shahid.api.sendEmail.sendMailByGroovy(sendEmail.groovy:116)
	at shahid.api.sendEmail$sendMailByGroovy.call(Unknown Source)
	at sendEmailtest.run(sendEmailtest:32)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:442)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:433)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:412)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:404)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:281)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:202)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:164)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:105)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:185)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1642973040738.run(TempTestSuite1642973040738.groovy:36)]]></system-err>
   </testsuite>
</testsuites>
